@page "/admin/crashes"
@page "/admin"
@page "/admin/{id:long}"
@inherits OwningComponentBase<ICrashRepository>
<!--Crashes table-->

<table class="table table-sm table-bordered table-hover">

    <thead>
        <tr>
            <th class="font-weight-bold">Crash ID</th>
            <th class="font-weight-bold">Crash Severity</th>
            <th class="font-weight-bold">City</th>
            <th class="font-weight-bold">County</th>
        </tr>
    </thead>

    <tbody>

        @if (crashdata?.Count() > 0)
        {
            //List the crashes
            @foreach (Crash c in crashdata)
            {
                <tr>
                    <td>@c.CRASH_ID</td>
                    <td>@c.CRASH_SEVERITY_ID</td>
                    <td>@c.CITY</td>
                    <td>@c.COUNTY_NAME</td>

                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(c.CRASH_ID)">Details</NavLink>
                    </td>

                    <td>
                        <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(c.CRASH_ID)">Edit</NavLink>
                    </td>

                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="@(x=> RemoveCrash(c))">Delete</button>
                    </td>
                </tr>
            }
        }

        else
        {
            <tr>
                <td colspan="5" class="text-center">No Crashes</td>
            </tr>
        }


    </tbody>

</table>


<button class="btn btn-danger btn-sm" @onclick="@(x => UpdateData(2))">Show More</button>



<NavLink class="btn btn-primary" href="/admin/crashes/create">Create</NavLink>

<!--Code for Table-->
@code {

    public ICrashRepository repo => Service;

    public IEnumerable<Crash> crashdata { get; set; }

    public string GetPageNumUrl(long id) => $"/admin/{id}";

    [Parameter]
    public long Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData(int pageNum = 1)
    {

        var testNum = 50 * pageNum;
        crashdata = await repo.crashdata.Take(testNum).ToListAsync();
    }

    public string GetDetailsUrl(long id) => $"/admin/crashes/details/{id}";
    public string GetEditUrl(long id) => $"/admin/crashes/edit/{id}";

    public async Task RemoveCrash(Crash c)
    {
        repo.DeleteCrash(c);
        await UpdateData();
    }

}